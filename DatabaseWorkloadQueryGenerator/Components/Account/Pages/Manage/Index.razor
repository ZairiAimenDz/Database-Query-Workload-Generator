@page "/Account/Manage"

@using DatabaseWorkloadQueryGenerator.Components.Account.Logic
@using DatabaseWorkloadQueryGenerator.Core.Entities.Users
@using Microsoft.AspNetCore.Identity

@inject UserManager<ApplicationUser> UserManager
@inject IdentityUserAccessor UserAccessor

<PageTitle>Profile Settings</PageTitle>
<div class="p-4">
    <div class="flex flex-col md:flex-row md:items-center gap-x-2 gap-y-3 md:justify-between mb-3">
        <h1 class="text-2xl font-semibold">Profile Management</h1>
    </div>
    <dl class="divide-y divide-gray-100 grid grid-cols-1 md:grid-cols-2 gap-8">
        @if (user is not null)
        {
            <PhoneNumberSettings UserId="@user.Id" CurrentPhoneNumber="@user.PhoneNumber" />
            <EmailSettings UserId="@user.Id" CurrentEmail="@user.Email" />
            @if (UserHasPassword)
            {
                <PasswordSettings UserId="@user.Id" />
            }
            else
            {
                <CodePasswordSettings UserId="@user.Id" />
            }
            <div class="md:col-span-2">
                <PersonalDataSettings UserId="@user.Id" />
            </div>
        }
    </dl>
</div>
@code {
    private ApplicationUser user = default!;
    bool UserHasPassword = false;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        UserHasPassword = await UserManager.HasPasswordAsync(user);
    }
}